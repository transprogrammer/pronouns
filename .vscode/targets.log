make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Fri Jul 22 23:42:30 2022

# Variables

 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from `Makefile', line 37)
REMOTE_NAME := origin
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/srage/sxc/harmonia
# makefile (from `Makefile', line 7)
SHELL = /usr/bin/env bash
# makefile (from `Makefile', line 10)
Q = @
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 42)
BD := [1m
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from `Makefile', line 43)
BL := [34m
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# environment
VSCODE_CWD = /Users/srage/sxc/harmonia
# environment
PATH = /opt/homebrew/opt/openjdk/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/gnu-getopt/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
# makefile (from `Makefile', line 40)
REPO_NAME := harmonia
# makefile (from `Makefile', line 111)
dpkg-query = status=$$(dpkg-query --show --showformat='$${db:Status-Status}' $(1) 2>/dev/null); [[ $$status == installed ]]; echo $$?
# makefile (from `Makefile', line 107)
activate = source $(VENV)/bin/activate
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `Makefile', line 73)
PY_URL = https://www.python.org/ftp/python/$(PY_VERS)/$(PY_DIR).tgz
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.Y8uU7CLccx/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `Makefile', line 69)
APT_PACKAGES = build-essential ccache gdb lcov libb2-dev libbz2-dev libffi-dev libgdbm-compat-dev libgdbm-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev lzma lzma-dev pkg-config tk-dev uuid-dev xvfb zlib1g-dev
# makefile (from `Makefile', line 35)
BRANCH_NAME := main
# environment
PWD = /Users/srage/sxc/harmonia
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# makefile (from `Makefile', line 45)
RS := (B[m
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /opt/homebrew/share/man:
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/srage
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /Users/srage/Library/Application Support/Code/CachedData/3b889b090b5ad5793f524b5d1d39fda662b96a2a
# environment
LOGNAME = srage
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 3
# makefile (from `Makefile', line 44)
CY := [36m
# default
MAKE_VERSION := 3.81
# environment
USER = srage
# makefile
.DEFAULT_GOAL := help
# makefile (from `Makefile', line 71)
PY_VERS = 3.10.5
# environment
TERM_SESSION_ID = 23DA5474-0BC1-4B4B-AE6D-95B1105C1DDE
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 47)
VENV = .venv
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# environment
TERM_PROGRAM = Apple_Terminal
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/pb/x779w5ln4n95rt2f0p05dxc40000gp/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/srage/Library/Application Support/Code/1.69.2-main.sock
# environment
MallocNanoZone = 0
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
TERM_PROGRAM_VERSION = 445
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.15201691.15201697.35836FFE-29D7-48D5-B5B7-D60B25BE3F52
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
__CF_USER_TEXT_ENCODING = 0x1F6:0x0:0x0
# environment
COMMAND_MODE = unix2003
# makefile (from `Makefile', line 38)
REMOTE_URL := https://github.com/transprogrammer/harmonia.git
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 72)
PY_DIR = Python-$(PY_VERS)
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# makefile (from `Makefile', line 75)
py-vers = python3 -V | cut -d ' ' -f 2
# default
SUFFIXES := 
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 2991
# variable set hash-table stats:
# Load=85/1024=8%, Rehash=0, Collisions=48/197=24%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777234, inode 15051180): 12 files, no impossibilities.

# 12 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

&:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

uuid-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

libreadline6-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

gdb:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

libgdbm-compat-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: help python install run pip exec-main venv apt build-essential ccache gdb lcov libb2-dev libbz2-dev libffi-dev libgdbm-compat-dev libgdbm-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev lzma lzma-dev pkg-config tk-dev uuid-dev xvfb zlib1g-dev shell clean reset
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

libffi-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

pip: .venv
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 100):
	$(Q)$(call activate); \
	python3 -m pip install -r requirements.txt
	

# Not a target:
python3-venv:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

tk-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
 
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-22 23:39:36
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

lzma:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

libssl-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

xvfb:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

libb2-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 15):
	$(Q)echo
	$(Q)echo '$(BD)Main:$(RS)'
	$(Q)echo
	$(Q)echo '$(CY)install$(RS) - $(BL)runs install targets.$(RS)'
	$(Q)echo '$(CY)run$(RS)     - $(BL)runs harmony.$(RS)'
	$(Q)echo '$(CY)clean$(RS)   - $(BL)cleans up file targets.$(RS)'
	$(Q)echo '$(CY)reset$(RS)   - $(BL)resets the project.$(RS)'
	$(Q)echo
	$(Q)echo '$(BD)Install:$(RS)'
	$(Q)echo
	$(Q)echo '$(CY)apt$(RS)     - $(BL)installs apt packages.$(RS)'
	$(Q)echo '$(CY)python$(RS)  - $(BL)installs python.$(RS)'
	$(Q)echo '$(CY)pip$(RS)     - $(BL)installs pip packages.$(RS)'
	$(Q)echo '$(CY)venv$(RS)    - $(BL)creates the python venv.$(RS)'
	$(Q)echo
	$(Q)echo '$(BD)Utility:$(RS)'
	$(Q)echo
	$(Q)echo '$(CY)shell$(RS)   - $(BL)starts an interactive shell in a docker dev env.$(RS)'
	$(Q)echo
	

lzma-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

libbz2-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

.venv:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 126):
	$(Q)python3 -m venv .venv
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

exec-main:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 105):
	$(Q)src/main.py || $(info run failed.)
	

reset: clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 154):
	$(Q)git config --local --remove-section user 2>/dev/null || [[ $$? -eq 128 ]]
	

run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 95):
	$(Q)$(call activate); \
	src/main.py
	

venv: python3-venv .venv
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 122):
	echo here:$(shell $(call dpkg-query,python3-venv))
	

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 150):
	$(Q)rm -fr$(V) $(VENV)
	

libsqlite3-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

ccache:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

pkg-config:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

shell:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `Makefile', line 137)
# COMMITISH = @{u}
# makefile (from `Makefile', line 140)
# NAME := harmonia.git
# makefile (from `Makefile', line 139)
# REMOTE := origin
# makefile (from `Makefile', line 138)
# REVISION := origin/main
# variable set hash-table stats:
# Load=4/32=12%, Rehash=0, Collisions=0/13=0%
#  commands to execute (from `Makefile', line 142):
	$(Q)docker container exec -it -- $(NAME) \
	/usr/bin/env bash -c 'export REMOTE_CONTAINERS_IPC=\
	$$(find /tmp -name '\''vscode-remote-containers-ipc*'\'' \
	-type s -printf "%T@ %p\n" | sort -n | cut -d " " -f 2- | tail -n 1);\
	$$SHELL -l'
	

liblzma-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

lcov:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

libgdbm-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

libncurses5-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

apt: build-essential ccache gdb lcov libb2-dev libbz2-dev libffi-dev libgdbm-compat-dev libgdbm-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev lzma lzma-dev pkg-config tk-dev uuid-dev xvfb zlib1g-dev
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-essential:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

zlib1g-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 133):
	$(Q)sudo apt-get update
 
	$(Q)sudo apt-get install $(APT_PACKAGES)
	

install: apt python pip
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

python: apt
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 82):
	$(Q)cd /tmp && \
	wget --directory-prefix /tmp --$(PY_URL) | tar x && \
	cd $(PY_DIR) && \
	./configure && \
	make && \
	sudo make install	
	

# files hash-table stats:
# Load=41/1024=4%, Rehash=0, Collisions=7/130=5%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Fri Jul 22 23:42:30 2022

 
